trigger:
  branches:
    include:
      - main
  paths:
    include:
      - SurianMing.Utilities.Testing.AutoDomainData
      - .deploy/deploy-testing-autodomaindata-utility.yml
    exclude:
      - README.md
      - LICENSE
      - .gitignore

parameters:
  - name: major
    displayName: Version (Major)
    type: number
    default: 1
  - name: minor
    displayName: Version (Minor)
    type: number
    default: 0
  - name: deployNuget
    displayName: Pack and Push nuget package (only relevant on branches)
    type: boolean
    default: false

variables:
  buildConfiguration: 'Release'
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    buildReason: 'PullRequest_Build'
    buildType: release
  ${{ if eq(variables['Build.Reason'], 'Manual') }}:
    buildReason: 'Manual_Build'
    buildType: ci
  ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}:
    buildReason: 'CI_Build'
    buildType: ci

  versionBase: ${{ format('{0}.{1}', parameters.major, parameters.minor) }}
  revisionCounterBase: $[format('{0}:{1}', variables.buildType, variables.versionBase)]
  patch: $[counter(variables['revisionCounterBase'], 1)]
  projectName: 'SurianMing.Utilities.Testing.AutoDomainData'

name: $(Build.DefinitionName)__$(buildReason)_$(patch)

pool:
  vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_test_package
    displayName: 'Build artifacts and run tests'
    steps:
    - task: NuGetAuthenticate@1

    - task: DotNetCoreCLI@2
      name: restore
      displayName: 'Restore packages'
      inputs:
        command: restore
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'
        vstsFeed: 'aa46413e-f145-4594-90e2-db39ee460522/48f072b3-519a-49a2-a407-8abcdb477a00'
        projects: '$(projectName)/*.csproj'

    - task: DotNetCoreCLI@2
      name: build
      displayName: 'Build projects'
      inputs:
        command: build
        projects: '$(projectName)/*.csproj'
        arguments: '--no-restore --configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      name: run_unit_tests
      displayName: 'Run Unit Tests'
      inputs:
        command: test
        projects: '$(projectName).Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      condition: ${{ or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters.deployNuget, true)) }}
      name: pack_release
      displayName: 'Build release nuget package'
      inputs:
        command: 'pack'
        packagesToPack: '$(projectName)/*.csproj;!**/*.Tests.csproj'
        packDirectory: '$(Build.ArtifactStagingDirectory)/package'
        arguments: '--configuration $(buildConfiguration)'
        nobuild: true
        versioningScheme: 'byPrereleaseNumber'
        majorVersion: ${{ parameters.major }}
        minorVersion: ${{ parameters.minor }}
        patchVersion: $(patch)
        includesymbols: true
        includesource: true

    - task: PublishPipelineArtifact@1
      condition: ${{ or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters.deployNuget, true)) }}
      name: publish_nuget_package_to_pipeline_artifact
      displayName: 'Publish nuget package as pipeline artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/package'
        artifact: 'package'

- stage: deploy_nuget_package_to_artifacts_feed
  dependsOn: build_test
  condition: ${{ or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters.deployNuget, true)) }}
  jobs:
  - job: deploy_to_artifacts_feed
    displayName: 'Deploy nuget package to artifacts feed'
    steps:
    - task: DownloadPipelineArtifact@2
      name: pull_nuget_package_from_pipeline_artifact
      displayName: 'Pull nuget package from pipeline artifact'
      inputs:
        buildType: 'current'
        artifact: 'package'
        targetPath: '$(Pipeline.Workspace)/package'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/package/*.nupkg;!$(Pipeline.Workspace)/package/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'e5bf0c44-065e-42db-b560-4f87a37aaf08'
